version: '3.9'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    image: pihole/pihole:2024.07.0
    # image: pihole/pihole:2024.06.0
    hostname: "{{.Node.Hostname}}"  #lets container adopt hostname of the docker host it is running on
    ports: # hostmode is ideal for DNS and DHCP
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 853
        published: 853
        protocol: tcp
        mode: host
      # - target: 80
      #   published: 8053
      #   protocol: tcp
      #   mode: host
      # - target: 67
      #   published: 67
      #   protocol: udp
      #   mode: host
      # - "53:53/tcp"
      # - "53:53/udp"
      # - "853:853/tcp" # DNS-over-TLS
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8053:80/tcp" # mgmt interface - using overlay with keepalived VIP for this one
    environment:
      # WEB_UID: 999 # <---db read only issue
      TZ: 'America/New_York'
      WEBPASSWORD: 'admin'
      VIRTUAL_HOST: "{{.Node.Hostname}}" #"pi.hole"
      PROXY_LOCATION: "{{.Node.Hostname}}" #"pi.hole"
      # WEB_BIND_ADDR: 10.0.1.101 # used when web interface is different than main IPV4 inf below
      # FTLCONF_LOCAL_IPV4: 127.0.0.1 #10.0.1.101
      FTLCONF_BLOCK_ICLOUD_PR: "false"
      FTLCONF_SHOW_DNSSEC: "true" 
      FTLCONF_PIHOLE_PTR: HOSTNAME
      FTLCONF_DEBUG_ALL: "true"
      # PIHOLE_UID : 0
      # DNSMASQ_USER: root # supposed to be interchangable with above UID var
      # SKIPGRAVITYONBOOT: 1
      DNSMASQ_LISTENING: all
      DNS_FQDN_REQUIRED: "true"
      DNS_BOGUS_PRIV: "true"
      DNSSEC : "true"
      PIHOLE_DNS_ : 1.1.1.1;84.200.69.80 # upstream DNS
      WEBTHEME: "default-dark"
      TEMPERATUREUNIT: f
      # PHP_MEMORY_LIMIT: 2G
    dns:
      - 127.0.0.1 # Sets your container's resolve settings to localhost so it can resolve DHCP hostnames from Pi-hole's DNSMasq, may fix resolution errors on container restart.
      # - 10.0.1.101
      - 1.1.1.1
    extra_hosts: # augment container's /etc/hosts file
      # Resolve to nothing domains (terminate connection)
      # - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
      # LAN hostnames for other hosts in the network since not using built-in PiHole DHCP the containert won't know of them (may not be needed since I am using AvaHi on all hosts)
      - 'galaxy:10.0.1.6'
      - 'galaxy-dock:10.0.1.7'
      - 'io:10.0.1.4'
      - 'odyssey:10.0.1.2'
      - 'odyssey-dock:10.0.1.3'
      - 'latitude:10.0.1.12'
      - 'latitude2:10.0.1.13'
    # cap_add:
      # - NET_ADMIN #<----Required if you are using Pi-hole as your DHCP server https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # - CAP_NET_BIND_SERVICE
      # - CAP_CHOWN
      # - CAP_SYS_NICE
    volumes:
    #   - /mnt/glusterfs/pihole/pihole-data:/etc/pihole
    #   - /mnt/glusterfs/pihole/pihole-dnsmasq:/etc/dnsmasq.d
    #   - /mnt/glusterfs/pihole/lighttpd/external.conf:/etc/lighttpd/external.conf  # webserver - Recommend leave as bind mount for easier editing.
      - piholedata:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
    networks:
      - pihole
      # - traefik-public
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.WIRED == YES
          - node.labels.PIHOLE == YES # sticking to two hosts since using "host" mode for network
      # labels:
      #   - 'traefik.enable=true'
      #   - 'traefik.docker.network=traefik-public'
      #   - 'traefik.http.routers.pihole.rule=Host(`pihole.mydomain.io`)'
      #   - 'traefik.http.routers.pihole.tls=true'
      #   - 'traefik.http.routers.pihole.tls.certresolver=myresolver'
      #   - 'traefik.http.services.pihole-srv.loadbalancer.server.port=80'
    logging: *default-logging
    

volumes:
  # NOTE: Must use 'external' for db volumes so they're not recreated during redeployments
  piholedata:
    external: true
  pihole-dnsmasq:
    external: true

networks:
  pihole:
    external: true
  # traefik-public: