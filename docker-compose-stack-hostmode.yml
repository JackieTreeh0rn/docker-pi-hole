version: '3.9'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

# More info https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole1:
    image: pihole/pihole:latest
    hostname: "{{.Node.Hostname}}"  #container adopts hostname of the docker host
    ports: # hostmode is ideal
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 853 # DNS-over-TLS
        published: 853
        protocol: tcp
        mode: host
      # - target: 67  # DHCP only
      #   published: 67
      #   protocol: udp
      #   mode: host
      # - "67:67/udp" # Only required if using DHCP functionality
      - "8053:80/tcp" # mgmt/UI interface - using overlay (non-host) w/keepalived VIP
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
      VIRTUAL_HOST: "{{.Node.Hostname}}" #"pi.hole"
      PROXY_LOCATION: "{{.Node.Hostname}}" #"pi.hole"
      # WEB_BIND_ADDR: 10.0.1.101 # used when web interface is different than main interface
      # FTLCONF_LOCAL_IPV4: 127.0.0.1 #10.0.1.101
      FTLCONF_BLOCK_ICLOUD_PR: "false"
      FTLCONF_SHOW_DNSSEC: "true" 
      FTLCONF_PIHOLE_PTR: HOSTNAME
      FTLCONF_DEBUG_ALL: "true"
      # WEB_UID: 999 # <--- use if db read only issues during startup
      # PIHOLE_UID : 0
      # DNSMASQ_USER: root
      # SKIPGRAVITYONBOOT: 1
      DNSMASQ_LISTENING: all
      DNS_FQDN_REQUIRED: "true"
      DNS_BOGUS_PRIV: "true"
      DNSSEC : "true"
      PIHOLE_DNS_ : 1.1.1.1;84.200.69.80 # upstream DNS
      WEBTHEME: "default-dark"
      TEMPERATUREUNIT: f
      # PHP_MEMORY_LIMIT: 2G
    dns:
      # Sets your container's resolver DNS settings to localhost and one upstream server so it can resolve external DNS during startups.
      - 127.0.0.1
      - 1.1.1.1
    extra_hosts: 
      # augment container's /etc/hosts file
      # Resolve to nothing domains (terminate connection)
      # - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
      # LAN hostnames for other hosts in the network to preload as local DNS entries
      - ${HOST_1}
      - ${HOST_2}
      - ${HOST_3}
      - ${HOST_4}
      - ${HOST_5}
      - ${HOST_6}
      - ${HOST_7}
    # cap_add:
      # - NET_ADMIN #<----Required if using Pi-hole as your DHCP server https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # - CAP_NET_BIND_SERVICE
      # - CAP_CHOWN
      # - CAP_SYS_NICE
    volumes:
      - piholedata:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
    networks:
      - pihole
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.PIHOLE1 == YES
    logging: *default-logging


  pihole2:
    image: pihole/pihole:latest
    hostname: "{{.Node.Hostname}}"  #container adopts hostname of the docker host
    ports: # hostmode is ideal
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 853 # DNS-over-TLS
        published: 853
        protocol: tcp
        mode: host
      # - target: 67  # DHCP only
      #   published: 67
      #   protocol: udp
      #   mode: host
      # - "67:67/udp" # Only required if using DHCP functionality
      - "8054:80/tcp" # mgmt/UI interface - using overlay (non-host) w/keepalived VIP
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
      VIRTUAL_HOST: "{{.Node.Hostname}}" #"pi.hole"
      PROXY_LOCATION: "{{.Node.Hostname}}" #"pi.hole"
      # WEB_BIND_ADDR: 10.0.1.101 # used when web interface is different than main interface
      # FTLCONF_LOCAL_IPV4: 127.0.0.1 #10.0.1.101
      FTLCONF_BLOCK_ICLOUD_PR: "false"
      FTLCONF_SHOW_DNSSEC: "true" 
      FTLCONF_PIHOLE_PTR: HOSTNAME
      FTLCONF_DEBUG_ALL: "true"
      # WEB_UID: 999 # <--- use if db read only issues during startup
      # PIHOLE_UID : 0
      # DNSMASQ_USER: root
      # SKIPGRAVITYONBOOT: 1
      DNSMASQ_LISTENING: all
      DNS_FQDN_REQUIRED: "true"
      DNS_BOGUS_PRIV: "true"
      DNSSEC : "true"
      PIHOLE_DNS_ : 1.1.1.1;84.200.69.80 # upstream DNS
      WEBTHEME: "default-dark"
      TEMPERATUREUNIT: f
      # PHP_MEMORY_LIMIT: 2G
    dns:
      # Sets your container's resolver DNS settings to localhost and one upstream server so it can resolve external DNS during startups.
      - 127.0.0.1
      - 1.1.1.1
    extra_hosts: 
      # augment container's /etc/hosts file
      # Resolve to nothing domains (terminate connection)
      # - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
      # LAN hostnames for other hosts in the network to preload as local DNS entries
      - ${HOST_1}
      - ${HOST_2}
      - ${HOST_3}
      - ${HOST_4}
      - ${HOST_5}
      - ${HOST_6}
      - ${HOST_7}
    # cap_add:
      # - NET_ADMIN #<----Required if using Pi-hole as your DHCP server https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # - CAP_NET_BIND_SERVICE
      # - CAP_CHOWN
      # - CAP_SYS_NICE
    volumes:
      - piholedata:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
    networks:
      - pihole
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.PIHOLE2 == YES
    logging: *default-logging
    

  orbital-sync:
    image: mattwebbio/orbital-sync:1
    environment:
      TZ: 'America/New_York'
      PRIMARY_HOST_BASE_URL: ${PRIMARY_HOST}
      PRIMARY_HOST_PASSWORD: ${PIHOLE_PASSWORD}
      SECONDARY_HOSTS_1_BASE_URL: ${SECONDARY_HOST}
      SECONDARY_HOSTS_1_PASSWORD: ${PIHOLE_PASSWORD}
      INTERVAL_MINUTES: 60
    networks:
      - pihole   
    depends_on:
      - pihole1
      - pihole2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.WIRED == YES # use your own constrains
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 1m
        monitor: 10s
    logging: *default-logging


volumes:
  # use 'external' for db volumes so they're not recreated during redeployments
  piholedata:
    external: true
  pihole-dnsmasq:
    external: true

networks:
  pihole:
    external: true
  # traefik-public: